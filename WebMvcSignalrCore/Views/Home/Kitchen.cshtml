@using FoodOrderSignalrCore.Models
@model IEnumerable<FoodOrderSignalrCore.Models.FoodOrder>

@{
    ViewData["Title"] = "Kitchen";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Kitchen Area</h1>
<div style="margin-right: 4px;">
    <i class="fas fa-comment-alt" onclick= "toggle('kitchenCommunications')" style="cursor: pointer">Chat </i>

    <div id="kitchenCommunications" style="display: none;">
        <div class="p-3 mb-2 bg-success text-white">Communications</div>
        <textarea id="kitchenChat" class="form-control" placeholder="MessageChat"></textarea>
        <br />
        <input type="button" class="btn btn-success" value="Broadcast" />
        <input type="button" class="btn btn-danger" value="Clear" />

        <div class="card" style="margin-top: 4px;">
            <div class="card-header">Communications</div>
            <div id="MessageList" class="card-body"></div>
        </div>
        <br/>
    </div>
</div>
<div class="row">
    <div style="margin-left:5px">
        <div class="row">
            <div class="col-md-3 container">
                <div class="p-3 bg-danger text-white" style="width: 18rem;"><i class="fas fa-exclamation-circle">Waiting List</i></div>
                <div id="waitingList"></div>
            </div>

            <div class="col-md-3 container">
                <div class="p-3 bg-warning text-white" style="width: 18rem;">In Progress</div>
                <div id="inprogress"></div>
            </div>

            <div class="col-md-3 container">
                <div class="p-3 bg-info text-white" style="width: 18rem;">Finish Cooking</div>
                <div id="finishCooking"></div>
            </div>

            <div class="col-md-3 container">
                <div class="p-3 bg-success text-white" style="width: 18rem;">Delivered</div>
                <div id="delivered"></div>
            </div>
        </div>
    </div>
</div>
<script type="text/javascript">

    var _kitchen = new Kitchen();
    var _foodOrders = new Kitchen();

    /**
     * Setup the connection
     */
    var connection = new signalR.HubConnectionBuilder()
        .withUrl("/foodhub")
        .configureLogging(signalR.LogLevel.Trace)
        .build();

    /**
     * this function will append nextStatus with next foodOrder
     * and it will discard the current list in foodOrderDivId
     */
    function updateStatus(foodOrderId) {

        _kitchen.foodOrders.forEach(function (foodOrder) {
            console.log(foodOrder.foodOrderId);
            if (foodOrder.foodOrderId == foodOrderId) {

                if (foodOrder.status === "Waiting List") {
                    foodOrder.status = "In Progress";
                } else if (foodOrder.status === "In Progress") {
                    foodOrder.status = "Finish Cooking";
                } else if (foodOrder.status === "Finish Cooking") {
                    foodOrder.status = "Delivered";
                } else if (foodOrder.status === "Delivered") {
                    _kitchen.foodOrders.pop(foodOrder);
                }
                refreshKitchen();
            }
            else {
                console.log('param foodOrderId[' + foodOrderId + '] not match with foodOrderId[' + foodOrder.foodOrderId+']');
            }
        });
    }

    /**
     * Refresh kitchen with the latest food orders
     */
    function refreshKitchen() {
        clearContent('waitingList');
        clearContent('inprogress');
        clearContent('finishCooking');
        clearContent('delivered');

        _kitchen.foodOrders.forEach(function (foodOrder) {
            // console.log(_kitchen.foodOrders);
            var card = foodOrder.createCard("foodOrder_" + foodOrder.foodOrderId);

            if (foodOrder.status === "Waiting List") {
                $("#waitingList").append(card);
            }
            else if (foodOrder.status === "In Progress") {
                $("#inprogress").append(card);
            }
            else if (foodOrder.status === "Finish Cooking") {
                $("#finishCooking").append(card);
            }
            else if (foodOrder.status === "Delivered") {
                $("#delivered").append(card);
            }
        });
    }
 

    $(document).ready(function () {
        connection.start().then(() => {
            connection.invoke("JoinRoom", "Kitchen 1", "Kitchen").catch(err => console.error(err.toString()));
        });
    });

    connection.on("ReceiveMessage", (user, message) => {
        var li = document.createElement("li");
        li.textContent = user + " says " + message;
        document.getElementById("MessageList").appendChild(li);
    });

    connection.on("RefreshKitchen",(foodOrder) => {
        _kitchen.updateOrder(foodOrder);
    });

    //action need to be taken if the kitchen received an order food
    connection.on("ReceiveFoodOrder",
        (order) => {

            order.foodOrders.forEach(function (foodOrder) {
                // build the food order objects
                var food = new Food();
                food.setFood(foodOrder.food.name, foodOrder.food.category, foodOrder.food.price);
                
                var foodOrderObj = new FoodOrder();
                foodOrderObj.setFoodOrder(foodOrder.orderId, foodOrder.foodOrderId, food, foodOrder.statusStr);
                _kitchen.foodOrders.push(foodOrderObj);
            });

            refreshKitchen();
        });


</script>